#!/bin/sh -e
##:
#h: Usage: go-h-coverage ...
#h:
#h: Helper script for launching intetration tests in Go and gather
#h: coverture information.
#h:
#h:   -l        : List "tests/tNN-*" scripts (if any).
#h:   -b        : Run "make all GO_CONF=-cover".
#h:   -r [TEST] : Execute tests and save data to "/tmp/cov". 
#h:               
#h: (i) It will put "./build" in path for you.
##:
go_h_coverage() {
    local OPTIND optopt ops=
    
    ## Parse command line arguments.
    while getopts "lbr" optopt; do
        ops="${ops}${optopt}"
        case $optopt in
            \?) return 1;;
        esac
    done
    shift $(( $OPTIND - 1 ))
    
    ## Operations.
    case "${ops}" in *l*) go_h_coverage_list     ;; esac
    case "${ops}" in *b*) go_h_coverage_build    ;; esac
    case "${ops}" in *r*) go_h_coverage_run "$@" ;; esac
    
    return 0
}
## -------------------------------------------------------------------
go_h_coverage_list() {
    local file name
    find tests -executable -regex ".*/${1:-t[0-9][0-9]*}.*" 2>/dev/null | while read -r file; do
        name="$(basename "${file}" | sed 's|[-_].*||')"
        printf '%s\t%s\n' "${name}" "${file}"
    done | sort
}
go_h_coverage_build() {
    make all GO_CONF="-cover"
}
go_h_coverage_run() (
    local t tmp="${TEMP:-/tmp}"
    case "$(uname -o)" in
        MS/Windows) export PATH="./build;${PATH}" GOCOVERDIR="${tmp}/cov";;
        *)          export PATH="./build:${PATH}" GOCOVERDIR="${tmp}/cov";;
    esac
    rm -rf "${GOCOVERDIR}"
    mkdir -p "${GOCOVERDIR}"
    for t in $(go_h_coverage_list "$1" | cut -f 2); do
        "$t" || true
    done
    go tool covdata percent -i "${GOCOVERDIR}"
    go tool covdata textfmt -i "${GOCOVERDIR}" -o COVERAGE
)
## -------------------------------------------------------------------
if test @"$(basename "$0")" = @"go-h-coverage";then
    case "${1}" in
        ''|-h|--help) sed -n 's/^ *#h: \{0,1\}//p' "$0";;
        *)            go_h_coverage "$@"; exit 0       ;;
    esac
fi
